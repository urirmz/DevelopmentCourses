html {
  box-sizing: border-box;
}

/* The ::before selector creates a pseudo-element which is the first child of the selected element, while the ::after selector creates a pseudo-element which is the last child of the selected element */
*, *::before, *::after {
  /* You can set the box-sizing property to inherit, which will tell the targeted elements to use the same value as the parent element. */
  box-sizing: inherit;
}

#piano {
  background-color: #00471b;
  width: 992px;
  height: 290px;
  margin: 80px auto;
  padding: 90px 20px 0 20px;
  position: relative;
  border-radius: 10px;
}

.keys {
  background-color: #040404;
  width: 949px;
  height: 180px;
  padding-left: 2px;
  /* overflow hidden property will hide any element that is pushed outside the set width value of .keys. */
  overflow: hidden;
}

.key {
  background-color: #ffffff;
  position: relative;
  width: 41px;
  height: 175px;
  margin: 2px;
  float: left;
  border-radius: 0 0 3px 3px;
}

.key.black--key::after {
  background-color: #1d1e22;
  /* The content property is used to set or override the content of the element. By default, the pseudo-elements created by the ::before and ::after pseudo-selectors are empty, and the elements will not be rendered to the page. Setting the content property to an empty string "" will ensure the element is rendered to the page while still being empty. */
  content: "";
  position: absolute;
  left: -18px;
  width: 32px;
  height: 100px;
  border-radius: 0 0 3px 3px;
}

.logo {
  width: 200px;
  position: absolute;
  top: 23px;
}

/* The @media at-rule, also known as a media query, is used to conditionally apply CSS. */
/* Add a media query that will be applied when the viewport is 768px wide and below. */
@media (max-width: 768px) {
  #piano {
    width: 358px;
  }

  .keys {
    width: 318px;
  }

  .logo {
    width: 150px;
  }
}

/* Logical operators can be used to construct more complex media queries. The and logical operator is used to query two media conditions. */
@media (max-width: 1199px) and (min-width: 769px) {
  #piano {
    width: 675px;
  }
  .keys {
    width: 633px;
  }
}